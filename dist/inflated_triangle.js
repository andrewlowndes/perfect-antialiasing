"use strict";(self.webpackChunksubpixel_rendering=self.webpackChunksubpixel_rendering||[]).push([[600],{69:(e,t,a)=>{const n=a(887),c=a(669),o=a(713),r=document.getElementById("inflateAmount"),s=document.getElementById("game"),l=s.getContext("2d"),i=n.vec2.fromValues(217.00664,255.7669),p=n.vec2.fromValues(416.7078,255.76),v=n.vec2.fromValues(416.7078,455.4263),u={p1:i,p2:p,p3:v,e1:(0,c.sub)(p,i),e2:(0,c.sub)(v,p),e3:(0,c.sub)(i,v),points:[i,p,v]};u.center=(0,c.avg)(...u.points);let m=20;r.value=m.toString(),r.oninput=()=>{m=parseFloat(r.value)},s.onmousemove=function(e){const t=s.getBoundingClientRect(),a=n.vec2.fromValues(e.pageX-t.left-document.documentElement.scrollLeft,s.height-(e.pageY-t.top-document.documentElement.scrollTop));n.vec2.copy(u.p2,a)};const h=()=>{n.vec2.rotate(u.p1,u.p1,u.center,.01),u.center=(0,c.avg)(...u.points),u.e1=(0,c.sub)(u.p2,u.p1),u.e2=(0,c.sub)(u.p3,u.p2),u.e3=(0,c.sub)(u.p1,u.p3);const e=[[u.p1,u.p2,u.p3],[u.p2,u.p3,u.p1],[u.p3,u.p1,u.p2]].map((([e,t,a])=>{const n=(0,c.normalize)((0,c.sub)(e,t)),o=(0,c.normalize)((0,c.sub)(a,t)),r=(0,c.scale)((0,c.normalize)((0,c.add)(n,o)),-1),s=Math.sqrt((1-(0,c.dot)(n,o))/2);return(0,c.add)(t,(0,c.scale)(r,m/s))}));l.clearRect(0,0,s.width,s.height),l.strokeStyle="red",l.beginPath(),(0,o.polygonPath)(l,u.points),l.stroke(),l.strokeStyle="green",l.beginPath(),(0,o.polygonPath)(l,e),l.stroke();const t=(0,c.min2)(...u.points),a=(0,c.max2)(...u.points);l.strokeStyle="blue",l.strokeRect(t[0]-m,l.canvas.height-a[1]-m,a[0]-t[0]+2*m,a[1]-t[1]+2*m),l.strokeStyle="orange",l.beginPath(),l.arc(u.p1[0],l.canvas.height-u.p1[1],m,0,2*Math.PI),l.stroke(),l.beginPath(),l.arc(u.p2[0],l.canvas.height-u.p2[1],m,0,2*Math.PI),l.stroke(),l.beginPath(),l.arc(u.p3[0],l.canvas.height-u.p3[1],m,0,2*Math.PI),l.stroke(),requestAnimationFrame(h)};requestAnimationFrame(h)},345:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.lerp=t.timeAtPos=t.clamp=t.fract=t.negFract=t.EPSILON=void 0,t.EPSILON=1e-6,t.negFract=e=>1-e+Math.floor(e),t.fract=e=>e-Math.floor(e),t.clamp=(e,t,a)=>Math.max(Math.min(e,a),t),t.timeAtPos=(e,a,n)=>a?(0,t.clamp)((n-e)/a,0,1):0,t.lerp=(e,t,a)=>e*(1-a)+t*a},669:(e,t,a)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.inside=t.inRange=t.avg=t.max2=t.min2=t.toPrecision2=t.lerp2=t.normalize=t.length=t.dot=t.sign=t.abs=t.ceil=t.floor=t.sub=t.adds=t.add=t.divide=t.multiply=t.scale=t.equals=t.determinant2=t.clamp2=void 0;const n=a(887),c=a(345);t.clamp2=(e,t,a)=>{const c=n.vec2.clone(e);return n.vec2.min(c,c,a),n.vec2.max(c,c,t),c},t.determinant2=(e,t)=>e[0]*t[1]-e[1]*t[0],t.equals=n.vec2.equals,t.scale=(e,t)=>n.vec2.scale(n.vec2.create(),e,t),t.multiply=(e,t)=>n.vec2.multiply(n.vec2.create(),e,t),t.divide=(e,t)=>n.vec2.divide(n.vec2.create(),e,t),t.add=(e,t)=>n.vec2.add(n.vec2.create(),e,t),t.adds=(e,t)=>n.vec2.fromValues(e[0]+t,e[1]+t),t.sub=(e,t)=>n.vec2.sub(n.vec2.create(),e,t),t.floor=e=>n.vec2.floor(n.vec2.create(),e),t.ceil=e=>n.vec2.ceil(n.vec2.create(),e),t.abs=e=>n.vec2.fromValues(Math.abs(e[0]),Math.abs(e[1])),t.sign=e=>n.vec2.fromValues(Math.sign(e[0]),Math.sign(e[1])),t.dot=(e,t)=>n.vec2.dot(e,t),t.length=e=>n.vec2.length(e),t.normalize=e=>(0,t.scale)(e,1/(0,t.length)(e)),t.lerp2=(e,t,a)=>n.vec2.lerp(n.vec2.create(),e,t,a),t.toPrecision2=(e,t)=>(e[0]=parseFloat(e[0].toPrecision(t)),e[1]=parseFloat(e[1].toPrecision(t)),e),t.min2=(...e)=>{const[t,...a]=e,c=n.vec2.clone(t);return a.forEach((e=>{n.vec2.min(c,c,e)})),c},t.max2=(...e)=>{const[t,...a]=e,c=n.vec2.clone(t);return a.forEach((e=>{n.vec2.max(c,c,e)})),c},t.avg=(...e)=>{const t=n.vec2.create();return e.length&&(e.forEach((e=>{n.vec2.add(t,t,e)})),n.vec2.scale(t,t,1/e.length)),t},t.inRange=(e,t,a)=>!(e[0]>a[0]||e[0]<t[0]||e[1]>a[1]||e[1]<t[1]),t.inside=(e,t)=>{let a=0,n=e[e.length-1];return e.forEach((e=>{const o=n[1]<e[1]?n:e,r=n[1]<e[1]?e:n;o[1]<t[1]+c.EPSILON&&r[1]>t[1]+c.EPSILON&&(r[0]-o[0])*(t[1]-o[1])>(t[0]-o[0])*(r[1]-o[1])&&(a+=1),n=e})),a%2!=0}},713:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.polygonPath=void 0,t.polygonPath=(e,t)=>{if(!t||!t.length)return;const a=t[0];e.moveTo(a[0],e.canvas.height-a[1]);for(let a=1;a<t.length;a++){const n=t[a];e.lineTo(n[0],e.canvas.height-n[1])}e.closePath()}}},e=>{e(e.s=69)}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,